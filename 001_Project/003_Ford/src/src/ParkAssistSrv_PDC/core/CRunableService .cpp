//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Ford-LCIS
//  @ File Name : CRunableService.cpp
//  @ Date : 2016-11-22
//  @ Author : Guofeng.lu@harman.com
//
//

#include "CRunableService.h"
#if 0
CRunableService::CRunableService()
{
	m_bQuit = false;
	m_strThreadName = "ThreadNameNotSet";
	m_pevent = new CEvent(false);
	PDCC_LOG_INFO("CRunableService1\n");
}
#endif
CRunableService::CRunableService(bool bwaitloop)
{
	m_bQuit = false;
	m_strThreadName = "ThreadNameNotSet";
	m_pevent = new CEvent(bwaitloop);
	//m_event->setAutoWait(bwaitloop);
	PDCC_LOG_INFO("CRunableService2\n");
}

static void CBRunnable(void* para){

    ((CRunableService*)para)->CBPause();
};

void CRunableService::CBPause()
{
	PDCC_LOG_INFO("CBPause is default\n");
}

CRunableService::CRunableService(const string& strName,bool bwaitloop)
{
	m_strThreadName = strName;
	m_bQuit = false;
	m_pevent = new CEvent(bwaitloop, CBRunnable,(void*)this);
	m_pevent->setOwner(strName);
	//m_pevent->setAutoWait(bwaitloop);
	PDCC_LOG_INFO("CRunableService3\n");
}

CRunableService::~CRunableService()
{
	if(m_pevent) delete m_pevent;
	m_pevent = NULL;
}


void CRunableService::init()
{
	PDCC_LOG_INFO("default CRunableService::init  name = %s\n ", m_strThreadName.c_str());
}

void CRunableService::run()
{
    //PDCC_LOG_INFO("CRunableService::run thread id = %d  name = %s...start\n ",0, m_strThreadName.c_str());
	init();
	while( !m_bQuit )
	{
		m_loopCnt++;
		m_pevent->wait();
		update();
		if(m_loopCnt%300==0)
		{
			PDCC_LOG_INFO("CRunableService::run  name = %s\n ", m_strThreadName.c_str());
		}
		
		//PDCC_LOG_INFO("CRunableService::run  name = %s\n ", m_strThreadName.c_str());
	}

   // PDCC_LOG_INFO("CRunableService::run thread id = %d  name = %s...exit \n ", 0, m_strThreadName.c_str());
	return;
}

void CRunableService::start()
{
	m_loopCnt =0;
	//Thread for Message queue  
    m_hThread = thread{&CRunableService::run,this};
    PDCC_LOG_INFO("CRunableService::run thread id = %x  name = %s...start\n ",m_hThread.get_id(), m_strThreadName.c_str());
    //default, thread will run to check if any mag has coming up
    m_pevent->set();
    
}

void CRunableService::quit()
{
   
   m_pevent->set();
   m_bQuit = true;
   PDCC_LOG_INFO("CRunableService::run thread id = %x  name = %s...quit\n ",m_hThread.get_id(), m_strThreadName.c_str());
}

void CRunableService::join()
{
	PDCC_LOG_INFO("CRunableService::run thread id = %x	name = %s...join\n ",m_hThread.get_id(), m_strThreadName.c_str());
    m_hThread.join();
   //pthread_join(pthread);
}

void CRunableService::pause()
{
	PDCC_LOG_INFO("CRunableService::pause() start\n");
    m_pevent->reset();
    PDCC_LOG_INFO("CRunableService::pause() end\n");
}

void CRunableService::resume()
{
    m_pevent->set();
    PDCC_LOG_INFO("CRunableService::resume()\n");
}


