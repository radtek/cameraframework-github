//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Ford-LCIS
//  @ File Name : CRunableService.h
//  @ Date : 2016-11-22
//  @ Author : Guofeng.lu@harman.com
//
//


#if !defined(_CRUNABLESERVICE_H)
#define _CRUNABLESERVICE_H

#include <thread>
#include <queue>
#include <string>
#include "CEvent.h"
#include "stdio.h"
#include "TraceMacros.h"
using namespace std;

class CRunableService {
public:
	//CRunableService();
	CRunableService(bool bwaitloop);
	virtual ~CRunableService();
	CRunableService(const string& strName,bool bwaitloop);
	virtual void start();
	virtual void start(void* pData)	{;}
	virtual void quit();
	virtual void join();
	virtual void init();
	virtual void run();
	virtual void pause();
	virtual void resume();
	//virtual bool initialize()	{ return false; };
	//virtual bool unInitialize(){ return false;};
	virtual void update()=0;
	virtual void CBPause();
	
private:
    thread m_hThread;
	bool m_bQuit ;
    CEvent* m_pevent;
	string m_strThreadName ;
	unsigned int m_loopCnt ;
};

#endif  //_CRUNABLESERVICE_H
