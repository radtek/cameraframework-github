/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by Voice CodeGen Version: R1_v1.3.0
* generated on: Tue Mar 07 13:22:52 CST 2017
*/
#include <v0/com/harman/ParkAssist/APAService.hpp>
#include <v0/com/harman/ParkAssist/APAServiceDBusStubAdapter.hpp>

namespace v0 {
namespace com {
namespace harman {
namespace ParkAssist {

std::shared_ptr<CommonAPI::DBus::DBusStubAdapter> createAPAServiceDBusStubAdapter(
                   const CommonAPI::DBus::DBusAddress &_address,
                   const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
                   const std::shared_ptr<CommonAPI::StubBase> &_stub) {
    return std::make_shared<APAServiceDBusStubAdapter>(_address, _connection, _stub);
}

INITIALIZER(registerAPAServiceDBusStubAdapter) {
    CommonAPI::DBus::Factory::get()->registerStubAdapterCreateMethod(
    	APAService::getInterface(), &createAPAServiceDBusStubAdapter);
}

APAServiceDBusStubAdapterInternal::~APAServiceDBusStubAdapterInternal() {
    deactivateManagedInstances();
    APAServiceDBusStubAdapterHelper::deinit();
}

void APAServiceDBusStubAdapterInternal::deactivateManagedInstances() {

}

const char* APAServiceDBusStubAdapterInternal::getMethodsDBusIntrospectionXmlData() const {
    static const std::string introspectionData =
        "<method name=\"getInterfaceVersion\">\n"
            "<arg name=\"value\" type=\"uu\" direction=\"out\" />"
        "</method>\n"
        "<method name=\"getAPAStatusAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onAPAStatusAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getAPAModeAvailabilityInfoAttribute\">\n"
            "<arg name=\"value\" type=\"a(ii)\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onAPAModeAvailabilityInfoAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"a(ii)\" />\n"
        "</signal>\n"
        "<method name=\"getObjApaViewTypeAttribute\">\n"
            "<arg name=\"value\" type=\"(ii)\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onObjApaViewTypeAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"(ii)\" />\n"
        "</signal>\n"
        "<method name=\"getCurrentApaActiveModeAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onCurrentApaActiveModeAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getScanLeftRightStatusAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onScanLeftRightStatusAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalSymbol1StatusAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalSymbol1StatusAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalSymbol2StatusAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalSymbol2StatusAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalText1Attribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalText1AttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalText2Attribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalText2AttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalCarLeftAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalCarLeftAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalCarRightAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalCarRightAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalCarPOAAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalCarPOAAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getParkScenarioLeftAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onParkScenarioLeftAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getParkScenarioRightAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onParkScenarioRightAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getParkScenarioPOAAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onParkScenarioPOAAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getCarNonRVCSacAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onCarNonRVCSacAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getAPAErrorStatusAttribute\">\n"
            "<arg name=\"value\" type=\"b\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onAPAErrorStatusAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"b\" />\n"
        "</signal>\n"
        "<method name=\"getParkInArrowAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onParkInArrowAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalPOALeftAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalPOALeftAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalPOARightAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalPOARightAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalPOARightSelectedAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalPOARightSelectedAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalPOALeftSelectedAttribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalPOALeftSelectedAttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalSymbol3Attribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalSymbol3AttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalSymbol4Attribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalSymbol4AttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalText3Attribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalText3AttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalText4Attribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalText4AttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"getPositionalText5Attribute\">\n"
            "<arg name=\"value\" type=\"i\" direction=\"out\" />"
        "</method>\n"
        "<signal name=\"onPositionalText5AttributeChanged\">\n"
            "<arg name=\"changedValue\" type=\"i\" />\n"
        "</signal>\n"
        "<method name=\"SelectApaMode\">\n"
            "<arg name=\"_m_eAPAMode\" type=\"i\" direction=\"in\" />\n"
        "</method>\n"

    ;
    return introspectionData.c_str();
}

CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        CommonAPI::Version
        > APAServiceDBusStubAdapterInternal::getAPAServiceInterfaceVersionStubDispatcher(&APAServiceStub::getInterfaceVersion, "uu");

CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enAPAStatus
        > APAServiceDBusStubAdapterInternal::getAPAStatusAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getAPAStatusAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::ListAPAavaliabilityInfo,
        ::v1::com::harman::ParkAssist::APABaseType_::ListAPAavaliabilityInfoDeployment_t
        > APAServiceDBusStubAdapterInternal::getAPAModeAvailabilityInfoAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getAPAModeAvailabilityInfoAttribute
            , "a(ii)"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::APAViewType,
        ::v1::com::harman::ParkAssist::APABaseType_::APAViewTypeDeployment_t
        > APAServiceDBusStubAdapterInternal::getObjApaViewTypeAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getObjApaViewTypeAttribute
            , "(ii)"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enAPAMode
        > APAServiceDBusStubAdapterInternal::getCurrentApaActiveModeAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getCurrentApaActiveModeAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalScanLeftRightStatus
        > APAServiceDBusStubAdapterInternal::getScanLeftRightStatusAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getScanLeftRightStatusAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol1Info
        > APAServiceDBusStubAdapterInternal::getPositionalSymbol1StatusAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalSymbol1StatusAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol2Info
        > APAServiceDBusStubAdapterInternal::getPositionalSymbol2StatusAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalSymbol2StatusAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalText1
        > APAServiceDBusStubAdapterInternal::getPositionalText1AttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalText1Attribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalText2
        > APAServiceDBusStubAdapterInternal::getPositionalText2AttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalText2Attribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        bool
        > APAServiceDBusStubAdapterInternal::getPositionalCarLeftAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalCarLeftAttribute
            , "b"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        bool
        > APAServiceDBusStubAdapterInternal::getPositionalCarRightAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalCarRightAttribute
            , "b"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        bool
        > APAServiceDBusStubAdapterInternal::getPositionalCarPOAAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalCarPOAAttribute
            , "b"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enParkScenarioLeft
        > APAServiceDBusStubAdapterInternal::getParkScenarioLeftAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getParkScenarioLeftAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enParkScenarioRight
        > APAServiceDBusStubAdapterInternal::getParkScenarioRightAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getParkScenarioRightAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        bool
        > APAServiceDBusStubAdapterInternal::getParkScenarioPOAAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getParkScenarioPOAAttribute
            , "b"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        bool
        > APAServiceDBusStubAdapterInternal::getCarNonRVCSacAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getCarNonRVCSacAttribute
            , "b"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        bool
        > APAServiceDBusStubAdapterInternal::getAPAErrorStatusAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getAPAErrorStatusAttribute
            , "b"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enParkInArrow
        > APAServiceDBusStubAdapterInternal::getParkInArrowAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getParkInArrowAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOALeft
        > APAServiceDBusStubAdapterInternal::getPositionalPOALeftAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalPOALeftAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOARight
        > APAServiceDBusStubAdapterInternal::getPositionalPOARightAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalPOARightAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOARightSelected
        > APAServiceDBusStubAdapterInternal::getPositionalPOARightSelectedAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalPOARightSelectedAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOALeftSelected
        > APAServiceDBusStubAdapterInternal::getPositionalPOALeftSelectedAttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalPOALeftSelectedAttribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol3
        > APAServiceDBusStubAdapterInternal::getPositionalSymbol3AttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalSymbol3Attribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol4
        > APAServiceDBusStubAdapterInternal::getPositionalSymbol4AttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalSymbol4Attribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalText3
        > APAServiceDBusStubAdapterInternal::getPositionalText3AttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalText3Attribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalText4
        > APAServiceDBusStubAdapterInternal::getPositionalText4AttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalText4Attribute
            , "i"
            );
CommonAPI::DBus::DBusGetAttributeStubDispatcher<
        ::v0::com::harman::ParkAssist::APAServiceStub,
        ::v1::com::harman::ParkAssist::APABaseType::enPositionalText5
        > APAServiceDBusStubAdapterInternal::getPositionalText5AttributeStubDispatcher(
            &::v0::com::harman::ParkAssist::APAServiceStub::getPositionalText5Attribute
            , "i"
            );



CommonAPI::DBus::DBusMethodWithReplyStubDispatcher<
    ::v0::com::harman::ParkAssist::APAServiceStub,
    std::tuple<::v1::com::harman::ParkAssist::APABaseType::enAPAMode>,
    std::tuple<>,
    std::tuple<CommonAPI::EmptyDeployment>,
    std::tuple<>
    
    > APAServiceDBusStubAdapterInternal::selectApaModeStubDispatcher(
    &APAServiceStub::SelectApaMode, "",
					std::make_tuple(static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
                	std::make_tuple());


void APAServiceDBusStubAdapterInternal::fireAPAStatusAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enAPAStatus& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enAPAStatus
    >>
        ::sendSignal(
            *this,
            "onAPAStatusAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::fireAPAModeAvailabilityInfoAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::ListAPAavaliabilityInfo& value) {
    CommonAPI::Deployable<::v1::com::harman::ParkAssist::APABaseType::ListAPAavaliabilityInfo, ::v1::com::harman::ParkAssist::APABaseType_::ListAPAavaliabilityInfoDeployment_t> deployedValue(value, static_cast<::v1::com::harman::ParkAssist::APABaseType_::ListAPAavaliabilityInfoDeployment_t*>(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::harman::ParkAssist::APABaseType::ListAPAavaliabilityInfo,
        ::v1::com::harman::ParkAssist::APABaseType_::ListAPAavaliabilityInfoDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onAPAModeAvailabilityInfoAttributeChanged",
            "a(ii)",
            deployedValue
    
    );
}
void APAServiceDBusStubAdapterInternal::fireObjApaViewTypeAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::APAViewType& value) {
    CommonAPI::Deployable<::v1::com::harman::ParkAssist::APABaseType::APAViewType, ::v1::com::harman::ParkAssist::APABaseType_::APAViewTypeDeployment_t> deployedValue(value, static_cast<::v1::com::harman::ParkAssist::APABaseType_::APAViewTypeDeployment_t*>(nullptr));
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    CommonAPI::Deployable<
        ::v1::com::harman::ParkAssist::APABaseType::APAViewType,
        ::v1::com::harman::ParkAssist::APABaseType_::APAViewTypeDeployment_t
    >
    >>
        ::sendSignal(
            *this,
            "onObjApaViewTypeAttributeChanged",
            "(ii)",
            deployedValue
    
    );
}
void APAServiceDBusStubAdapterInternal::fireCurrentApaActiveModeAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enAPAMode& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enAPAMode
    >>
        ::sendSignal(
            *this,
            "onCurrentApaActiveModeAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::fireScanLeftRightStatusAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalScanLeftRightStatus& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalScanLeftRightStatus
    >>
        ::sendSignal(
            *this,
            "onScanLeftRightStatusAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalSymbol1StatusAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol1Info& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol1Info
    >>
        ::sendSignal(
            *this,
            "onPositionalSymbol1StatusAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalSymbol2StatusAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol2Info& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol2Info
    >>
        ::sendSignal(
            *this,
            "onPositionalSymbol2StatusAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalText1AttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalText1& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalText1
    >>
        ::sendSignal(
            *this,
            "onPositionalText1AttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalText2AttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalText2& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalText2
    >>
        ::sendSignal(
            *this,
            "onPositionalText2AttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalCarLeftAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onPositionalCarLeftAttributeChanged",
            "b",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalCarRightAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onPositionalCarRightAttributeChanged",
            "b",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalCarPOAAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onPositionalCarPOAAttributeChanged",
            "b",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::fireParkScenarioLeftAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enParkScenarioLeft& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enParkScenarioLeft
    >>
        ::sendSignal(
            *this,
            "onParkScenarioLeftAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::fireParkScenarioRightAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enParkScenarioRight& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enParkScenarioRight
    >>
        ::sendSignal(
            *this,
            "onParkScenarioRightAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::fireParkScenarioPOAAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onParkScenarioPOAAttributeChanged",
            "b",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::fireCarNonRVCSacAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onCarNonRVCSacAttributeChanged",
            "b",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::fireAPAErrorStatusAttributeChanged(const bool& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    bool
    >>
        ::sendSignal(
            *this,
            "onAPAErrorStatusAttributeChanged",
            "b",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::fireParkInArrowAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enParkInArrow& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enParkInArrow
    >>
        ::sendSignal(
            *this,
            "onParkInArrowAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalPOALeftAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOALeft& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOALeft
    >>
        ::sendSignal(
            *this,
            "onPositionalPOALeftAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalPOARightAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOARight& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOARight
    >>
        ::sendSignal(
            *this,
            "onPositionalPOARightAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalPOARightSelectedAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOARightSelected& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOARightSelected
    >>
        ::sendSignal(
            *this,
            "onPositionalPOARightSelectedAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalPOALeftSelectedAttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOALeftSelected& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalPOALeftSelected
    >>
        ::sendSignal(
            *this,
            "onPositionalPOALeftSelectedAttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalSymbol3AttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol3& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol3
    >>
        ::sendSignal(
            *this,
            "onPositionalSymbol3AttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalSymbol4AttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol4& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalSymbol4
    >>
        ::sendSignal(
            *this,
            "onPositionalSymbol4AttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalText3AttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalText3& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalText3
    >>
        ::sendSignal(
            *this,
            "onPositionalText3AttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalText4AttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalText4& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalText4
    >>
        ::sendSignal(
            *this,
            "onPositionalText4AttributeChanged",
            "i",
            value
    
    );
}
void APAServiceDBusStubAdapterInternal::firePositionalText5AttributeChanged(const ::v1::com::harman::ParkAssist::APABaseType::enPositionalText5& value) {
    CommonAPI::DBus::DBusStubSignalHelper<CommonAPI::DBus::DBusSerializableArguments<
    ::v1::com::harman::ParkAssist::APABaseType::enPositionalText5
    >>
        ::sendSignal(
            *this,
            "onPositionalText5AttributeChanged",
            "i",
            value
    
    );
}



const APAServiceDBusStubAdapterHelper::StubDispatcherTable& APAServiceDBusStubAdapterInternal::getStubDispatcherTable() {
    return stubDispatcherTable_;
}

const CommonAPI::DBus::StubAttributeTable& APAServiceDBusStubAdapterInternal::getStubAttributeTable() {
    return stubAttributeTable_;
}

APAServiceDBusStubAdapterInternal::APAServiceDBusStubAdapterInternal(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection,
        const std::shared_ptr<CommonAPI::StubBase> &_stub)
	: CommonAPI::DBus::DBusStubAdapter(_address, _connection,false),
      APAServiceDBusStubAdapterHelper(_address, _connection, std::dynamic_pointer_cast<APAServiceStub>(_stub), false),
      stubDispatcherTable_({
            { { "getAPAStatusAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getAPAStatusAttributeStubDispatcher },
            { { "getAPAModeAvailabilityInfoAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getAPAModeAvailabilityInfoAttributeStubDispatcher },
            { { "getObjApaViewTypeAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getObjApaViewTypeAttributeStubDispatcher },
            { { "getCurrentApaActiveModeAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getCurrentApaActiveModeAttributeStubDispatcher },
            { { "getScanLeftRightStatusAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getScanLeftRightStatusAttributeStubDispatcher },
            { { "getPositionalSymbol1StatusAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalSymbol1StatusAttributeStubDispatcher },
            { { "getPositionalSymbol2StatusAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalSymbol2StatusAttributeStubDispatcher },
            { { "getPositionalText1Attribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalText1AttributeStubDispatcher },
            { { "getPositionalText2Attribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalText2AttributeStubDispatcher },
            { { "getPositionalCarLeftAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalCarLeftAttributeStubDispatcher },
            { { "getPositionalCarRightAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalCarRightAttributeStubDispatcher },
            { { "getPositionalCarPOAAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalCarPOAAttributeStubDispatcher },
            { { "getParkScenarioLeftAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getParkScenarioLeftAttributeStubDispatcher },
            { { "getParkScenarioRightAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getParkScenarioRightAttributeStubDispatcher },
            { { "getParkScenarioPOAAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getParkScenarioPOAAttributeStubDispatcher },
            { { "getCarNonRVCSacAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getCarNonRVCSacAttributeStubDispatcher },
            { { "getAPAErrorStatusAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getAPAErrorStatusAttributeStubDispatcher },
            { { "getParkInArrowAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getParkInArrowAttributeStubDispatcher },
            { { "getPositionalPOALeftAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalPOALeftAttributeStubDispatcher },
            { { "getPositionalPOARightAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalPOARightAttributeStubDispatcher },
            { { "getPositionalPOARightSelectedAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalPOARightSelectedAttributeStubDispatcher },
            { { "getPositionalPOALeftSelectedAttribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalPOALeftSelectedAttributeStubDispatcher },
            { { "getPositionalSymbol3Attribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalSymbol3AttributeStubDispatcher },
            { { "getPositionalSymbol4Attribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalSymbol4AttributeStubDispatcher },
            { { "getPositionalText3Attribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalText3AttributeStubDispatcher },
            { { "getPositionalText4Attribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalText4AttributeStubDispatcher },
            { { "getPositionalText5Attribute", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getPositionalText5AttributeStubDispatcher }
            ,
            { { "SelectApaMode", "i" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::selectApaModeStubDispatcher }
            }),
        stubAttributeTable_() {

    stubDispatcherTable_.insert({ { "getInterfaceVersion", "" }, &com::harman::ParkAssist::APAServiceDBusStubAdapterInternal::getAPAServiceInterfaceVersionStubDispatcher });
}

bool APAServiceDBusStubAdapterInternal::hasFreedesktopProperties() {
    return false;
}

} // namespace ParkAssist
} // namespace harman
} // namespace com
} // namespace v0
