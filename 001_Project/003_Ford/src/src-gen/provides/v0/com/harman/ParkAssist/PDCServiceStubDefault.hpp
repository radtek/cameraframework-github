/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by Voice CodeGen Version: R1_v1.3.0
* generated on: Tue Mar 07 13:22:52 CST 2017
*/
#ifndef V0_COM_HARMAN_PARKASSIST_PDC_Service_STUB_DEFAULT_HPP_
#define V0_COM_HARMAN_PARKASSIST_PDC_Service_STUB_DEFAULT_HPP_


#include <v0/com/harman/ParkAssist/PDCServiceStub.hpp>
#include <sstream>

namespace v0 {
namespace com {
namespace harman {
namespace ParkAssist {

/**
 * Provides a default implementation for PDCServiceStubRemoteEvent and
 * PDCServiceStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class PDCServiceStubDefault
    : public virtual PDCServiceStub {
public:
    PDCServiceStubDefault();

    PDCServiceStubRemoteEvent* initStubAdapter(const std::shared_ptr<PDCServiceStubAdapter> &_adapter);

    const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client);

    virtual const ::v1::com::harman::ParkAssist::PDCBaseType::enPDCStatus& getPDCStatusAttribute();
    virtual const ::v1::com::harman::ParkAssist::PDCBaseType::enPDCStatus& getPDCStatusAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    virtual void setPDCStatusAttribute(::v1::com::harman::ParkAssist::PDCBaseType::enPDCStatus _value);
    virtual const bool& getPDCErrorStatusAttribute();
    virtual const bool& getPDCErrorStatusAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    virtual void setPDCErrorStatusAttribute(bool _value);

    virtual void CancelPDCReq(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::ParkAssist::PDCBaseType::enCancelPDCIcon _m_eCancelPDC, CancelPDCReqReply_t _reply);



protected:
    virtual bool trySetPDCStatusAttribute(::v1::com::harman::ParkAssist::PDCBaseType::enPDCStatus _value);
    virtual bool validatePDCStatusAttributeRequestedValue(const ::v1::com::harman::ParkAssist::PDCBaseType::enPDCStatus &_value);
    virtual bool trySetPDCErrorStatusAttribute(bool _value);
    virtual bool validatePDCErrorStatusAttributeRequestedValue(const bool &_value);
    class RemoteEventHandler: public virtual PDCServiceStubRemoteEvent {
    public:
        RemoteEventHandler(PDCServiceStubDefault *_defaultStub);




    private:
        PDCServiceStubDefault *defaultStub_;
    };
private:
    PDCServiceStubDefault::RemoteEventHandler remoteEventHandler_;

    ::v1::com::harman::ParkAssist::PDCBaseType::enPDCStatus pDCStatusAttributeValue_ {};
    bool pDCErrorStatusAttributeValue_ {};

    CommonAPI::Version interfaceVersion_;
};

} // namespace ParkAssist
} // namespace harman
} // namespace com
} // namespace v0


// Compatibility
namespace v0_1 = v0;

#endif // V0_COM_HARMAN_PARKASSIST_PDC_Service_STUB_DEFAULT
