/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by Voice CodeGen Version: R1_v1.3.0
* generated on: Tue Mar 07 13:22:52 CST 2017
*/
#ifndef V0_ORG_HARMAN_FORD_bodycontroldata_PROXY_HPP_
#define V0_ORG_HARMAN_FORD_bodycontroldata_PROXY_HPP_

#include <v0/org/harman/ford/bodycontroldataProxyBase.hpp>


#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/AttributeExtension.hpp>
#include <CommonAPI/Factory.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v0 {
namespace org {
namespace harman {
namespace ford {

template <typename ... _AttributeExtensions>
class bodycontroldataProxy
    : virtual public bodycontroldata, 
      virtual public bodycontroldataProxyBase,
      virtual public _AttributeExtensions... {
public:
    bodycontroldataProxy(std::shared_ptr<CommonAPI::Proxy> delegate);
    ~bodycontroldataProxy();

    typedef bodycontroldata InterfaceType;


    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute RearDiffOil_Te_Actl.
     */
    virtual RearDiffOil_Te_ActlAttribute& getRearDiffOil_Te_ActlAttribute() {
        return delegate_->getRearDiffOil_Te_ActlAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute FuelLvlWarn_D_ActlEng.
     */
    virtual FuelLvlWarn_D_ActlEngAttribute& getFuelLvlWarn_D_ActlEngAttribute() {
        return delegate_->getFuelLvlWarn_D_ActlEngAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute FuelLvl_Pc_DsplyEng.
     */
    virtual FuelLvl_Pc_DsplyEngAttribute& getFuelLvl_Pc_DsplyEngAttribute() {
        return delegate_->getFuelLvl_Pc_DsplyEngAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute stabCtlBrkActv_B_Actl_enum.
     */
    virtual StabCtlBrkActv_B_Actl_enumAttribute& getStabCtlBrkActv_B_Actl_enumAttribute() {
        return delegate_->getStabCtlBrkActv_B_Actl_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute FuelRange_L_Dsply.
     */
    virtual FuelRange_L_DsplyAttribute& getFuelRange_L_DsplyAttribute() {
        return delegate_->getFuelRange_L_DsplyAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute LightAmbColor_No_Actl.
     */
    virtual LightAmbColor_No_ActlAttribute& getLightAmbColor_No_ActlAttribute() {
        return delegate_->getLightAmbColor_No_ActlAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute LightAmbIntsty_No_Actl.
     */
    virtual LightAmbIntsty_No_ActlAttribute& getLightAmbIntsty_No_ActlAttribute() {
        return delegate_->getLightAmbIntsty_No_ActlAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute factoryReset_Rq_enum.
     */
    virtual FactoryReset_Rq_enumAttribute& getFactoryReset_Rq_enumAttribute() {
        return delegate_->getFactoryReset_Rq_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute tCU_ESN_D_Rq_enum.
     */
    virtual TCU_ESN_D_Rq_enumAttribute& getTCU_ESN_D_Rq_enumAttribute() {
        return delegate_->getTCU_ESN_D_Rq_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute tCU_Sftwr_Update_D_St_enum.
     */
    virtual TCU_Sftwr_Update_D_St_enumAttribute& getTCU_Sftwr_Update_D_St_enumAttribute() {
        return delegate_->getTCU_Sftwr_Update_D_St_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute parklamp_Status_enum.
     */
    virtual Parklamp_Status_enumAttribute& getParklamp_Status_enumAttribute() {
        return delegate_->getParklamp_Status_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute day_Night_Status_enum.
     */
    virtual Day_Night_Status_enumAttribute& getDay_Night_Status_enumAttribute() {
        return delegate_->getDay_Night_Status_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute backlit_LED_Status_enum.
     */
    virtual Backlit_LED_Status_enumAttribute& getBacklit_LED_Status_enumAttribute() {
        return delegate_->getBacklit_LED_Status_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute Dimming_Lvl.
     */
    virtual Dimming_LvlAttribute& getDimming_LvlAttribute() {
        return delegate_->getDimming_LvlAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute Litval.
     */
    virtual LitvalAttribute& getLitvalAttribute() {
        return delegate_->getLitvalAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute ApedPos_Pc_ActlArb.
     */
    virtual ApedPos_Pc_ActlArbAttribute& getApedPos_Pc_ActlArbAttribute() {
        return delegate_->getApedPos_Pc_ActlArbAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute EngAout_N_Actl.
     */
    virtual EngAout_N_ActlAttribute& getEngAout_N_ActlAttribute() {
        return delegate_->getEngAout_N_ActlAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute tCMode_enum.
     */
    virtual TCMode_enumAttribute& getTCMode_enumAttribute() {
        return delegate_->getTCMode_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute FuelFlw_Vl_Dsply.
     */
    virtual FuelFlw_Vl_DsplyAttribute& getFuelFlw_Vl_DsplyAttribute() {
        return delegate_->getFuelFlw_Vl_DsplyAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute WhlRotatFr_No_Cnt.
     */
    virtual WhlRotatFr_No_CntAttribute& getWhlRotatFr_No_CntAttribute() {
        return delegate_->getWhlRotatFr_No_CntAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute WhlRotatFl_No_Cnt.
     */
    virtual WhlRotatFl_No_CntAttribute& getWhlRotatFl_No_CntAttribute() {
        return delegate_->getWhlRotatFl_No_CntAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute WhlRotatRr_No_Cnt.
     */
    virtual WhlRotatRr_No_CntAttribute& getWhlRotatRr_No_CntAttribute() {
        return delegate_->getWhlRotatRr_No_CntAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute WhlRotatRl_No_Cnt.
     */
    virtual WhlRotatRl_No_CntAttribute& getWhlRotatRl_No_CntAttribute() {
        return delegate_->getWhlRotatRl_No_CntAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute WhlDirRr_D_Actl.
     */
    virtual WhlDirRr_D_ActlAttribute& getWhlDirRr_D_ActlAttribute() {
        return delegate_->getWhlDirRr_D_ActlAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute WhlDirFl_D_Actl.
     */
    virtual WhlDirFl_D_ActlAttribute& getWhlDirFl_D_ActlAttribute() {
        return delegate_->getWhlDirFl_D_ActlAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute WhlDirFr_D_Actl.
     */
    virtual WhlDirFr_D_ActlAttribute& getWhlDirFr_D_ActlAttribute() {
        return delegate_->getWhlDirFr_D_ActlAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute WhlDirRl_D_Actl.
     */
    virtual WhlDirRl_D_ActlAttribute& getWhlDirRl_D_ActlAttribute() {
        return delegate_->getWhlDirRl_D_ActlAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute distanceBarSetting_enum.
     */
    virtual DistanceBarSetting_enumAttribute& getDistanceBarSetting_enumAttribute() {
        return delegate_->getDistanceBarSetting_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute rstrnImpactEvntStatus_enum.
     */
    virtual RstrnImpactEvntStatus_enumAttribute& getRstrnImpactEvntStatus_enumAttribute() {
        return delegate_->getRstrnImpactEvntStatus_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute vehVActlEng_D_Qf_enum.
     */
    virtual VehVActlEng_D_Qf_enumAttribute& getVehVActlEng_D_Qf_enumAttribute() {
        return delegate_->getVehVActlEng_D_Qf_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute Veh_V_ActlEng.
     */
    virtual Veh_V_ActlEngAttribute& getVeh_V_ActlEngAttribute() {
        return delegate_->getVeh_V_ActlEngAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute hMI_HMIMode_St_enum.
     */
    virtual HMI_HMIMode_St_enumAttribute& getHMI_HMIMode_St_enumAttribute() {
        return delegate_->getHMI_HMIMode_St_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute LightAmbColor_No_Rq.
     */
    virtual LightAmbColor_No_RqAttribute& getLightAmbColor_No_RqAttribute() {
        return delegate_->getLightAmbColor_No_RqAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute LightAmbIntsty_No_Rq.
     */
    virtual LightAmbIntsty_No_RqAttribute& getLightAmbIntsty_No_RqAttribute() {
        return delegate_->getLightAmbIntsty_No_RqAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute tCU_Init_Actvtn_St_enum.
     */
    virtual TCU_Init_Actvtn_St_enumAttribute& getTCU_Init_Actvtn_St_enumAttribute() {
        return delegate_->getTCU_Init_Actvtn_St_enumAttribute();
    }
    /**
     * description: No Information Available
     */
    /**
     * Returns the wrapper class that provides access to the attribute tCU_Final_Actvtn_St_enum.
     */
    virtual TCU_Final_Actvtn_St_enumAttribute& getTCU_Final_Actvtn_St_enumAttribute() {
        return delegate_->getTCU_Final_Actvtn_St_enumAttribute();
    }
    /**
     * Returns the wrapper class that provides access to the attribute gWM_Send_Signals_7_HS3_sig_5.
     */
    virtual GWM_Send_Signals_7_HS3_sig_5Attribute& getGWM_Send_Signals_7_HS3_sig_5Attribute() {
        return delegate_->getGWM_Send_Signals_7_HS3_sig_5Attribute();
    }
    /**
     * Returns the wrapper class that provides access to the attribute body_Info_1_HS3_sig_0.
     */
    virtual Body_Info_1_HS3_sig_0Attribute& getBody_Info_1_HS3_sig_0Attribute() {
        return delegate_->getBody_Info_1_HS3_sig_0Attribute();
    }
    /**
     * Returns the wrapper class that provides access to the attribute vehicle_Status_Msg_sig_0.
     */
    virtual Vehicle_Status_Msg_sig_0Attribute& getVehicle_Status_Msg_sig_0Attribute() {
        return delegate_->getVehicle_Status_Msg_sig_0Attribute();
    }
    /**
     * Returns the wrapper class that provides access to the attribute bodyInformation_3_sig_1.
     */
    virtual BodyInformation_3_sig_1Attribute& getBodyInformation_3_sig_1Attribute() {
        return delegate_->getBodyInformation_3_sig_1Attribute();
    }




    /**
     * Returns the CommonAPI address of the remote partner this proxy communicates with.
     */
    virtual const CommonAPI::Address &getAddress() const;

    /**
     * Returns true if the remote partner for this proxy is currently known to be available.
     */
    virtual bool isAvailable() const;

    /**
     * Returns true if the remote partner for this proxy is available.
     */
    virtual bool isAvailableBlocking() const;

    /**
     * Returns the wrapper class that is used to (de-)register for notifications about
     * the availability of the remote partner of this proxy.
     */
    virtual CommonAPI::ProxyStatusEvent& getProxyStatusEvent();

    /**
     * Returns the wrapper class that is used to access version information of the remote
     * partner of this proxy.
     */
    virtual CommonAPI::InterfaceVersionAttribute& getInterfaceVersionAttribute();

 private:
    std::shared_ptr<bodycontroldataProxyBase> delegate_;
};

typedef bodycontroldataProxy<> bodycontroldataProxyDefault;

namespace bodycontroldataExtensions {
    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class RearDiffOil_Te_ActlAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::RearDiffOil_Te_ActlAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::RearDiffOil_Te_ActlAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        RearDiffOil_Te_ActlAttributeExtension() {}
    #endif
    
        RearDiffOil_Te_ActlAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getRearDiffOil_Te_ActlAttribute()) {
        }
    
        inline extension_type& getRearDiffOil_Te_ActlAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class FuelLvlWarn_D_ActlEngAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::FuelLvlWarn_D_ActlEngAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::FuelLvlWarn_D_ActlEngAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        FuelLvlWarn_D_ActlEngAttributeExtension() {}
    #endif
    
        FuelLvlWarn_D_ActlEngAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getFuelLvlWarn_D_ActlEngAttribute()) {
        }
    
        inline extension_type& getFuelLvlWarn_D_ActlEngAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class FuelLvl_Pc_DsplyEngAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::FuelLvl_Pc_DsplyEngAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::FuelLvl_Pc_DsplyEngAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        FuelLvl_Pc_DsplyEngAttributeExtension() {}
    #endif
    
        FuelLvl_Pc_DsplyEngAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getFuelLvl_Pc_DsplyEngAttribute()) {
        }
    
        inline extension_type& getFuelLvl_Pc_DsplyEngAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class StabCtlBrkActv_B_Actl_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::StabCtlBrkActv_B_Actl_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::StabCtlBrkActv_B_Actl_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        StabCtlBrkActv_B_Actl_enumAttributeExtension() {}
    #endif
    
        StabCtlBrkActv_B_Actl_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getStabCtlBrkActv_B_Actl_enumAttribute()) {
        }
    
        inline extension_type& getStabCtlBrkActv_B_Actl_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class FuelRange_L_DsplyAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::FuelRange_L_DsplyAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::FuelRange_L_DsplyAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        FuelRange_L_DsplyAttributeExtension() {}
    #endif
    
        FuelRange_L_DsplyAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getFuelRange_L_DsplyAttribute()) {
        }
    
        inline extension_type& getFuelRange_L_DsplyAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class LightAmbColor_No_ActlAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::LightAmbColor_No_ActlAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::LightAmbColor_No_ActlAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        LightAmbColor_No_ActlAttributeExtension() {}
    #endif
    
        LightAmbColor_No_ActlAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getLightAmbColor_No_ActlAttribute()) {
        }
    
        inline extension_type& getLightAmbColor_No_ActlAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class LightAmbIntsty_No_ActlAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::LightAmbIntsty_No_ActlAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::LightAmbIntsty_No_ActlAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        LightAmbIntsty_No_ActlAttributeExtension() {}
    #endif
    
        LightAmbIntsty_No_ActlAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getLightAmbIntsty_No_ActlAttribute()) {
        }
    
        inline extension_type& getLightAmbIntsty_No_ActlAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class FactoryReset_Rq_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::FactoryReset_Rq_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::FactoryReset_Rq_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        FactoryReset_Rq_enumAttributeExtension() {}
    #endif
    
        FactoryReset_Rq_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getFactoryReset_Rq_enumAttribute()) {
        }
    
        inline extension_type& getFactoryReset_Rq_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class TCU_ESN_D_Rq_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::TCU_ESN_D_Rq_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::TCU_ESN_D_Rq_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        TCU_ESN_D_Rq_enumAttributeExtension() {}
    #endif
    
        TCU_ESN_D_Rq_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getTCU_ESN_D_Rq_enumAttribute()) {
        }
    
        inline extension_type& getTCU_ESN_D_Rq_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class TCU_Sftwr_Update_D_St_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::TCU_Sftwr_Update_D_St_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::TCU_Sftwr_Update_D_St_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        TCU_Sftwr_Update_D_St_enumAttributeExtension() {}
    #endif
    
        TCU_Sftwr_Update_D_St_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getTCU_Sftwr_Update_D_St_enumAttribute()) {
        }
    
        inline extension_type& getTCU_Sftwr_Update_D_St_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class Parklamp_Status_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::Parklamp_Status_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::Parklamp_Status_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        Parklamp_Status_enumAttributeExtension() {}
    #endif
    
        Parklamp_Status_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getParklamp_Status_enumAttribute()) {
        }
    
        inline extension_type& getParklamp_Status_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class Day_Night_Status_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::Day_Night_Status_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::Day_Night_Status_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        Day_Night_Status_enumAttributeExtension() {}
    #endif
    
        Day_Night_Status_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getDay_Night_Status_enumAttribute()) {
        }
    
        inline extension_type& getDay_Night_Status_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class Backlit_LED_Status_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::Backlit_LED_Status_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::Backlit_LED_Status_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        Backlit_LED_Status_enumAttributeExtension() {}
    #endif
    
        Backlit_LED_Status_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getBacklit_LED_Status_enumAttribute()) {
        }
    
        inline extension_type& getBacklit_LED_Status_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class Dimming_LvlAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::Dimming_LvlAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::Dimming_LvlAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        Dimming_LvlAttributeExtension() {}
    #endif
    
        Dimming_LvlAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getDimming_LvlAttribute()) {
        }
    
        inline extension_type& getDimming_LvlAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class LitvalAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::LitvalAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::LitvalAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        LitvalAttributeExtension() {}
    #endif
    
        LitvalAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getLitvalAttribute()) {
        }
    
        inline extension_type& getLitvalAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class ApedPos_Pc_ActlArbAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::ApedPos_Pc_ActlArbAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::ApedPos_Pc_ActlArbAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        ApedPos_Pc_ActlArbAttributeExtension() {}
    #endif
    
        ApedPos_Pc_ActlArbAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getApedPos_Pc_ActlArbAttribute()) {
        }
    
        inline extension_type& getApedPos_Pc_ActlArbAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class EngAout_N_ActlAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::EngAout_N_ActlAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::EngAout_N_ActlAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        EngAout_N_ActlAttributeExtension() {}
    #endif
    
        EngAout_N_ActlAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getEngAout_N_ActlAttribute()) {
        }
    
        inline extension_type& getEngAout_N_ActlAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class TCMode_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::TCMode_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::TCMode_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        TCMode_enumAttributeExtension() {}
    #endif
    
        TCMode_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getTCMode_enumAttribute()) {
        }
    
        inline extension_type& getTCMode_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class FuelFlw_Vl_DsplyAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::FuelFlw_Vl_DsplyAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::FuelFlw_Vl_DsplyAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        FuelFlw_Vl_DsplyAttributeExtension() {}
    #endif
    
        FuelFlw_Vl_DsplyAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getFuelFlw_Vl_DsplyAttribute()) {
        }
    
        inline extension_type& getFuelFlw_Vl_DsplyAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class WhlRotatFr_No_CntAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::WhlRotatFr_No_CntAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::WhlRotatFr_No_CntAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        WhlRotatFr_No_CntAttributeExtension() {}
    #endif
    
        WhlRotatFr_No_CntAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getWhlRotatFr_No_CntAttribute()) {
        }
    
        inline extension_type& getWhlRotatFr_No_CntAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class WhlRotatFl_No_CntAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::WhlRotatFl_No_CntAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::WhlRotatFl_No_CntAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        WhlRotatFl_No_CntAttributeExtension() {}
    #endif
    
        WhlRotatFl_No_CntAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getWhlRotatFl_No_CntAttribute()) {
        }
    
        inline extension_type& getWhlRotatFl_No_CntAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class WhlRotatRr_No_CntAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::WhlRotatRr_No_CntAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::WhlRotatRr_No_CntAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        WhlRotatRr_No_CntAttributeExtension() {}
    #endif
    
        WhlRotatRr_No_CntAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getWhlRotatRr_No_CntAttribute()) {
        }
    
        inline extension_type& getWhlRotatRr_No_CntAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class WhlRotatRl_No_CntAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::WhlRotatRl_No_CntAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::WhlRotatRl_No_CntAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        WhlRotatRl_No_CntAttributeExtension() {}
    #endif
    
        WhlRotatRl_No_CntAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getWhlRotatRl_No_CntAttribute()) {
        }
    
        inline extension_type& getWhlRotatRl_No_CntAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class WhlDirRr_D_ActlAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::WhlDirRr_D_ActlAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::WhlDirRr_D_ActlAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        WhlDirRr_D_ActlAttributeExtension() {}
    #endif
    
        WhlDirRr_D_ActlAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getWhlDirRr_D_ActlAttribute()) {
        }
    
        inline extension_type& getWhlDirRr_D_ActlAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class WhlDirFl_D_ActlAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::WhlDirFl_D_ActlAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::WhlDirFl_D_ActlAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        WhlDirFl_D_ActlAttributeExtension() {}
    #endif
    
        WhlDirFl_D_ActlAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getWhlDirFl_D_ActlAttribute()) {
        }
    
        inline extension_type& getWhlDirFl_D_ActlAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class WhlDirFr_D_ActlAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::WhlDirFr_D_ActlAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::WhlDirFr_D_ActlAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        WhlDirFr_D_ActlAttributeExtension() {}
    #endif
    
        WhlDirFr_D_ActlAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getWhlDirFr_D_ActlAttribute()) {
        }
    
        inline extension_type& getWhlDirFr_D_ActlAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class WhlDirRl_D_ActlAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::WhlDirRl_D_ActlAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::WhlDirRl_D_ActlAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        WhlDirRl_D_ActlAttributeExtension() {}
    #endif
    
        WhlDirRl_D_ActlAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getWhlDirRl_D_ActlAttribute()) {
        }
    
        inline extension_type& getWhlDirRl_D_ActlAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class DistanceBarSetting_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::DistanceBarSetting_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::DistanceBarSetting_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        DistanceBarSetting_enumAttributeExtension() {}
    #endif
    
        DistanceBarSetting_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getDistanceBarSetting_enumAttribute()) {
        }
    
        inline extension_type& getDistanceBarSetting_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class RstrnImpactEvntStatus_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::RstrnImpactEvntStatus_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::RstrnImpactEvntStatus_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        RstrnImpactEvntStatus_enumAttributeExtension() {}
    #endif
    
        RstrnImpactEvntStatus_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getRstrnImpactEvntStatus_enumAttribute()) {
        }
    
        inline extension_type& getRstrnImpactEvntStatus_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class VehVActlEng_D_Qf_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::VehVActlEng_D_Qf_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::VehVActlEng_D_Qf_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        VehVActlEng_D_Qf_enumAttributeExtension() {}
    #endif
    
        VehVActlEng_D_Qf_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getVehVActlEng_D_Qf_enumAttribute()) {
        }
    
        inline extension_type& getVehVActlEng_D_Qf_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class Veh_V_ActlEngAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::Veh_V_ActlEngAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::Veh_V_ActlEngAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        Veh_V_ActlEngAttributeExtension() {}
    #endif
    
        Veh_V_ActlEngAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getVeh_V_ActlEngAttribute()) {
        }
    
        inline extension_type& getVeh_V_ActlEngAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class HMI_HMIMode_St_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::HMI_HMIMode_St_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::HMI_HMIMode_St_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        HMI_HMIMode_St_enumAttributeExtension() {}
    #endif
    
        HMI_HMIMode_St_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getHMI_HMIMode_St_enumAttribute()) {
        }
    
        inline extension_type& getHMI_HMIMode_St_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class LightAmbColor_No_RqAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::LightAmbColor_No_RqAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::LightAmbColor_No_RqAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        LightAmbColor_No_RqAttributeExtension() {}
    #endif
    
        LightAmbColor_No_RqAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getLightAmbColor_No_RqAttribute()) {
        }
    
        inline extension_type& getLightAmbColor_No_RqAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class LightAmbIntsty_No_RqAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::LightAmbIntsty_No_RqAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::LightAmbIntsty_No_RqAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        LightAmbIntsty_No_RqAttributeExtension() {}
    #endif
    
        LightAmbIntsty_No_RqAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getLightAmbIntsty_No_RqAttribute()) {
        }
    
        inline extension_type& getLightAmbIntsty_No_RqAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class TCU_Init_Actvtn_St_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::TCU_Init_Actvtn_St_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::TCU_Init_Actvtn_St_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        TCU_Init_Actvtn_St_enumAttributeExtension() {}
    #endif
    
        TCU_Init_Actvtn_St_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getTCU_Init_Actvtn_St_enumAttribute()) {
        }
    
        inline extension_type& getTCU_Init_Actvtn_St_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    /**
     * description: No Information Available
     */
    template <template <typename > class _ExtensionType>
    class TCU_Final_Actvtn_St_enumAttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::TCU_Final_Actvtn_St_enumAttribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::TCU_Final_Actvtn_St_enumAttribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        TCU_Final_Actvtn_St_enumAttributeExtension() {}
    #endif
    
        TCU_Final_Actvtn_St_enumAttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getTCU_Final_Actvtn_St_enumAttribute()) {
        }
    
        inline extension_type& getTCU_Final_Actvtn_St_enumAttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    template <template <typename > class _ExtensionType>
    class GWM_Send_Signals_7_HS3_sig_5AttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::GWM_Send_Signals_7_HS3_sig_5Attribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::GWM_Send_Signals_7_HS3_sig_5Attribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        GWM_Send_Signals_7_HS3_sig_5AttributeExtension() {}
    #endif
    
        GWM_Send_Signals_7_HS3_sig_5AttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getGWM_Send_Signals_7_HS3_sig_5Attribute()) {
        }
    
        inline extension_type& getGWM_Send_Signals_7_HS3_sig_5AttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    template <template <typename > class _ExtensionType>
    class Body_Info_1_HS3_sig_0AttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::Body_Info_1_HS3_sig_0Attribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::Body_Info_1_HS3_sig_0Attribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        Body_Info_1_HS3_sig_0AttributeExtension() {}
    #endif
    
        Body_Info_1_HS3_sig_0AttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getBody_Info_1_HS3_sig_0Attribute()) {
        }
    
        inline extension_type& getBody_Info_1_HS3_sig_0AttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    template <template <typename > class _ExtensionType>
    class Vehicle_Status_Msg_sig_0AttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::Vehicle_Status_Msg_sig_0Attribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::Vehicle_Status_Msg_sig_0Attribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        Vehicle_Status_Msg_sig_0AttributeExtension() {}
    #endif
    
        Vehicle_Status_Msg_sig_0AttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getVehicle_Status_Msg_sig_0Attribute()) {
        }
    
        inline extension_type& getVehicle_Status_Msg_sig_0AttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

    template <template <typename > class _ExtensionType>
    class BodyInformation_3_sig_1AttributeExtension {
     public:
        typedef _ExtensionType<bodycontroldataProxyBase::BodyInformation_3_sig_1Attribute> extension_type;
    
        static_assert(std::is_base_of<typename CommonAPI::AttributeExtension<bodycontroldataProxyBase::BodyInformation_3_sig_1Attribute>, extension_type>::value,
                      "Not CommonAPI Attribute Extension!");
    #ifdef WIN32
        BodyInformation_3_sig_1AttributeExtension() {}
    #endif
    
        BodyInformation_3_sig_1AttributeExtension(bodycontroldataProxyBase& proxy): attributeExtension_(proxy.getBodyInformation_3_sig_1Attribute()) {
        }
    
        inline extension_type& getBodyInformation_3_sig_1AttributeExtension() {
            return attributeExtension_;
        }
    
     private:
        extension_type attributeExtension_;
    };

} // namespace bodycontroldataExtensions

//
// bodycontroldataProxy Implementation
//
template <typename ... _AttributeExtensions>
bodycontroldataProxy<_AttributeExtensions...>::bodycontroldataProxy(std::shared_ptr<CommonAPI::Proxy> delegate):
        _AttributeExtensions(*(std::dynamic_pointer_cast<bodycontroldataProxyBase>(delegate)))...,
        delegate_(std::dynamic_pointer_cast<bodycontroldataProxyBase>(delegate)) {
}

template <typename ... _AttributeExtensions>
bodycontroldataProxy<_AttributeExtensions...>::~bodycontroldataProxy() {
}


template <typename ... _AttributeExtensions>
const CommonAPI::Address &bodycontroldataProxy<_AttributeExtensions...>::getAddress() const {
    return delegate_->getAddress();
}

template <typename ... _AttributeExtensions>
bool bodycontroldataProxy<_AttributeExtensions...>::isAvailable() const {
    return delegate_->isAvailable();
}

template <typename ... _AttributeExtensions>
bool bodycontroldataProxy<_AttributeExtensions...>::isAvailableBlocking() const {
    return delegate_->isAvailableBlocking();
}

template <typename ... _AttributeExtensions>
CommonAPI::ProxyStatusEvent& bodycontroldataProxy<_AttributeExtensions...>::getProxyStatusEvent() {
    return delegate_->getProxyStatusEvent();
}

template <typename ... _AttributeExtensions>
CommonAPI::InterfaceVersionAttribute& bodycontroldataProxy<_AttributeExtensions...>::getInterfaceVersionAttribute() {
    return delegate_->getInterfaceVersionAttribute();
}


} // namespace ford
} // namespace harman
} // namespace org
} // namespace v0

namespace CommonAPI {
template<template<typename > class _AttributeExtension>
struct DefaultAttributeProxyHelper<::v0::org::harman::ford::bodycontroldataProxy,
    _AttributeExtension> {
    typedef typename ::v0::org::harman::ford::bodycontroldataProxy<
            ::v0::org::harman::ford::bodycontroldataExtensions::RearDiffOil_Te_ActlAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::FuelLvlWarn_D_ActlEngAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::FuelLvl_Pc_DsplyEngAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::StabCtlBrkActv_B_Actl_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::FuelRange_L_DsplyAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::LightAmbColor_No_ActlAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::LightAmbIntsty_No_ActlAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::FactoryReset_Rq_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::TCU_ESN_D_Rq_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::TCU_Sftwr_Update_D_St_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::Parklamp_Status_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::Day_Night_Status_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::Backlit_LED_Status_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::Dimming_LvlAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::LitvalAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::ApedPos_Pc_ActlArbAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::EngAout_N_ActlAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::TCMode_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::FuelFlw_Vl_DsplyAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::WhlRotatFr_No_CntAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::WhlRotatFl_No_CntAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::WhlRotatRr_No_CntAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::WhlRotatRl_No_CntAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::WhlDirRr_D_ActlAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::WhlDirFl_D_ActlAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::WhlDirFr_D_ActlAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::WhlDirRl_D_ActlAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::DistanceBarSetting_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::RstrnImpactEvntStatus_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::VehVActlEng_D_Qf_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::Veh_V_ActlEngAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::HMI_HMIMode_St_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::LightAmbColor_No_RqAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::LightAmbIntsty_No_RqAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::TCU_Init_Actvtn_St_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::TCU_Final_Actvtn_St_enumAttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::GWM_Send_Signals_7_HS3_sig_5AttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::Body_Info_1_HS3_sig_0AttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::Vehicle_Status_Msg_sig_0AttributeExtension<_AttributeExtension>, 
            ::v0::org::harman::ford::bodycontroldataExtensions::BodyInformation_3_sig_1AttributeExtension<_AttributeExtension>
    > class_t;
};
}


// Compatibility
namespace v0_1 = v0;

#endif // V0_ORG_HARMAN_FORD_bodycontroldata_PROXY_HPP_
