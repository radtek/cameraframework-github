# generated by DCIF CodeGen Version: R2_v2.3.0
# generated on: Tue Aug 01 13:37:53 CST 2017

#cmake -D CMAKE_SYSROOT=<SYSROOT_PATH> -D src-gen=<SRC-GEN_Build_Path> ..

add_definitions($ENV{CXXFLAGS} $ENV{LDFLAGS})

include_directories(./src)

include_directories(./../src-gen/provides)
include_directories(./provides)
include_directories(${CMAKE_SYSROOT}/usr/include/CommonAPI-3.1)

link_directories(${CMAKE_SYSROOT}/usr/lib)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pthread -std=c++11")

OPTION(USE_INSTALLED_COMMONAPI "Set to OFF to use the local (build tree) version of CommonAPI" ON)
message(STATUS "USE_INSTALLED_COMMONAPI is set to value: ${USE_INSTALLED_COMMONAPI}")
if ("${USE_INSTALLED_COMMONAPI}" STREQUAL "ON")
endif()

message(STATUS "CommonAPI_CONSIDERED_CONFIGS: ${CommonAPI_CONSIDERED_CONFIGS}")
message(STATUS "COMMONAPI_INCLUDE_DIRS: ${COMMONAPI_INCLUDE_DIRS}")

include_directories(
${COMMONAPI_INCLUDE_DIRS}
)

link_directories(
${COMMONAPI_LIBDIR}

)

LINK_DIRECTORIES(${src-gen})
add_definitions(-DLINUX_OS)

include_directories(${PROJECT_SOURCE_DIR}/../../000_Framework/libAFoundation/include)
include_directories(${PROJECT_SOURCE_DIR}/../../000_Framework/libABase/include)
include_directories(${PROJECT_SOURCE_DIR}/../../000_Framework/CaseClient/include)
include_directories(${PROJECT_SOURCE_DIR}/include)
include_directories(${PROJECT_SOURCE_DIR}/include/Rvc)
include_directories(${PROJECT_SOURCE_DIR}/include/Camera)


link_directories(${PROJECT_SOURCE_DIR}/../../000_Framework/libAFoundation/lib/linux)
link_directories(${PROJECT_SOURCE_DIR}/../../000_Framework/libABase/lib/linux)
link_directories(${PROJECT_SOURCE_DIR}/../../000_Framework/CaseClient/lib/linux)

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/linux)

MESSAGE(STATUS "This is binary ADAS dir " ${PROJECT_SOURCE_DIR})

AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src MAIN_SRC)
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/Camera CAM_SRC)
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/Rvc RVC_SRC)


add_executable(
adas
${MAIN_SRC} ${CAM_SRC} ${RVC_SRC}
provides/v0/com/harman/adas/AVMServiceStubImpl.cpp
provides/v0/com/harman/adas/PASServiceStubImpl.cpp
provides/v0/com/harman/adas/AdasServiceStubImpl.cpp
)
target_link_libraries(
adas
adas_adas_types_static_stub
AFoundation ABase ACaseSocket
-Wl,--no-undefined,--as-needed CommonAPI
rt)

