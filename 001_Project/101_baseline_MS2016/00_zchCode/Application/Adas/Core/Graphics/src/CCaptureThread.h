//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Adas
//  @ File Name : CCaptureThread.h
//  @ Date : 2/16/2015
//  @ Author : 
//
//


#if !defined(_CCAPTURETHREAD_H)
#define _CCAPTURETHREAD_H

#include "CMsgQueueRunnable.h"
#include "CScreenBufferArray.h"
#include "CCameraSysManager.h"

class CCaptureDriver;
class CCaptureThread : public CMsgQueueRunnable
{
public://method
	CCaptureThread(const string& strName)
	: CMsgQueueRunnable(strName)
	, m_pCaptureDriverCfg(NULL)
	, m_pCaptureDriver(NULL)
	, m_pCaptureBufArray(NULL)
	, m_pVsynCallback(NULL)
	, m_bCaptureEnable(FALSE)
	{
		;
	}

	void setConfig(const tagCaptureConfig& config, void* pDriverCfg, CAPTURECALLBACK callback )
	{
		m_config = config;
		m_pCaptureDriverCfg = pDriverCfg;
		m_pVsynCallback = callback;
	}

	CCaptureDriver*	getCaptureDriver()	{ return m_pCaptureDriver;	}

protected: //method
	virtual BOOLEAN initialize() ;
	virtual void 	unInitialize() ;

	BOOLEAN initialize_capture(void* pConfig, ECapDriverType eDriverType);

protected: //data
	tagCaptureConfig	m_config;
	void*				m_pCaptureDriverCfg;
	CCaptureDriver* 	m_pCaptureDriver;
	CScreenBufferArray*	m_pCaptureBufArray;
	CAPTURECALLBACK		m_pVsynCallback;
	BOOLEAN				m_bCaptureEnable;
};

#endif  //_CCAPTURETHREAD_H
