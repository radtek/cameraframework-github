/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.201702211714.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.3.0
* generated on: Tue Aug 01 13:37:50 CST 2017
*/
#ifndef V0_COM_HARMAN_ADAS_AVM_Service_STUB_DEFAULT_HPP_
#define V0_COM_HARMAN_ADAS_AVM_Service_STUB_DEFAULT_HPP_


#include <v0/com/harman/adas/AVMServiceStub.hpp>
#include <sstream>

namespace v0 {
namespace com {
namespace harman {
namespace adas {

/**
 * Provides a default implementation for AVMServiceStubRemoteEvent and
 * AVMServiceStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class AVMServiceStubDefault
    : public virtual AVMServiceStub {
public:
    AVMServiceStubDefault();

    AVMServiceStubRemoteEvent* initStubAdapter(const std::shared_ptr<AVMServiceStubAdapter> &_adapter);

    const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client);

    virtual const ::v1::com::harman::adas::AVMBaseType::stAVMCamState& getAVMCamStatusAttribute();
    virtual const ::v1::com::harman::adas::AVMBaseType::stAVMCamState& getAVMCamStatusAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    virtual void setAVMCamStatusAttribute(::v1::com::harman::adas::AVMBaseType::stAVMCamState _value);
    virtual const ::v1::com::harman::adas::CTABaseType::stCTAStatus& getCTAStatusAttribute();
    virtual const ::v1::com::harman::adas::CTABaseType::stCTAStatus& getCTAStatusAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    virtual void setCTAStatusAttribute(::v1::com::harman::adas::CTABaseType::stCTAStatus _value);
    virtual const ::v1::com::harman::adas::AVMBaseType::enAutoCaliState& getAutoStatusAttribute();
    virtual const ::v1::com::harman::adas::AVMBaseType::enAutoCaliState& getAutoStatusAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    virtual void setAutoStatusAttribute(::v1::com::harman::adas::AVMBaseType::enAutoCaliState _value);

    virtual void SwitchAVMView(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::adas::AVMBaseType::enAVMViewMode _m_eAVMViewMode, SwitchAVMViewReply_t _reply);
    virtual void SwitchGuideline(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::adas::AVMBaseType::enAVMGuideLineMode _m_eAVMGuideLinewMode, SwitchGuidelineReply_t _reply);
    virtual void SwitchCTA(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::adas::CTABaseType::enCTAWorkMode _m_eCATMode, SwitchCTAReply_t _reply);
    virtual void SwitchAutoCalibrationAuto(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::adas::AVMBaseType::enAutoCaliWorkModeAuto _m_eAutoCaliMode, SwitchAutoCalibrationAutoReply_t _reply);
    virtual void SwitchAutoCalibrationManually(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::adas::AVMBaseType::enAutoCaliWorkModeManu _m_eAutoCaliMode, SwitchAutoCalibrationManuallyReply_t _reply);

virtual void fireBcAVMViewStatusEvent(const ::v1::com::harman::adas::AVMBaseType::enAVMStatus &_m_AVMStatus);


protected:
    virtual bool trySetAVMCamStatusAttribute(::v1::com::harman::adas::AVMBaseType::stAVMCamState _value);
    virtual bool validateAVMCamStatusAttributeRequestedValue(const ::v1::com::harman::adas::AVMBaseType::stAVMCamState &_value);
    virtual bool trySetCTAStatusAttribute(::v1::com::harman::adas::CTABaseType::stCTAStatus _value);
    virtual bool validateCTAStatusAttributeRequestedValue(const ::v1::com::harman::adas::CTABaseType::stCTAStatus &_value);
    virtual bool trySetAutoStatusAttribute(::v1::com::harman::adas::AVMBaseType::enAutoCaliState _value);
    virtual bool validateAutoStatusAttributeRequestedValue(const ::v1::com::harman::adas::AVMBaseType::enAutoCaliState &_value);
    class RemoteEventHandler: public virtual AVMServiceStubRemoteEvent {
    public:
        RemoteEventHandler(AVMServiceStubDefault *_defaultStub);





    private:
        AVMServiceStubDefault *defaultStub_;
    };
private:
    AVMServiceStubDefault::RemoteEventHandler remoteEventHandler_;

    ::v1::com::harman::adas::AVMBaseType::stAVMCamState aVMCamStatusAttributeValue_ {};
    ::v1::com::harman::adas::CTABaseType::stCTAStatus cTAStatusAttributeValue_ {};
    ::v1::com::harman::adas::AVMBaseType::enAutoCaliState autoStatusAttributeValue_ {};

    CommonAPI::Version interfaceVersion_;
};

} // namespace adas
} // namespace harman
} // namespace com
} // namespace v0


// Compatibility
namespace v0_1 = v0;

#endif // V0_COM_HARMAN_ADAS_AVM_Service_STUB_DEFAULT
